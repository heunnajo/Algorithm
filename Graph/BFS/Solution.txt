DFS와 BFS 모두 임의의 정점에서 시작하여 모든 정점을 한번씩 방문한다.
특정한 경우, BFS는 최단 거리 또는 최소 시간을 구하는 알고리즘이 된다.
BFS는 단계별로 진행되기 때문에 가중치가 1일 때 최단 거리(최소 시간)을 구할 수 있다.

* BFS로 해결할 수 있는 문제
1. 최소 비용 문제
2. 간선 가중치가 1
3. 정점, 간선 갯수가 적어야 함.
  BFS의 시간 복잡도 = O(V+E) = O(E)
  O(1억)이 약 1초이기 때문에 O(E)의 E는 최대 약 5백만개가 되야한다.

* 주의할 점
최소 비용과 간선의 가중치가 동일해야 한다!
예를 들어, 간선의 가중치 : 이동 시 걸리는 시간, 구하는 최소 비용 : 최소 시간
        간선의 가중치 : 이동 거리, 구하는 최소 비용 : 최소 거리
        
* BFS 풀 때 그래프 이론 개념과 관점 도입
무엇이 정점이고, 무엇이 간선이 되는가? 를 판단하고 정한다.
지금까지 몇 문제들을 풀어본 결과. n에서 m까지 이동하는 최소 비용을 구하고자 할 때, 
1. 시간(거리)를 저장하는 배열 dist를 만들고
2. bfs함수는 이 dist배열을 완성하는 것이고, 정답은 dist[m]이 된다.
